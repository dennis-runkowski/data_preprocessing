"""Process single item.

This data loader processes a single item, formats the data to the
item model and processes through the data preprocessing pipeline. An id is
generated by hashing the text.

Example:
    .. code-block::

        from data_preprocessing import DataPreprocess

        config = {
            "data_loader": {
                "type": "single_item",
                "log_level": "INFO"
            },
            "steps": [
                {
                    "name": "normalize_text",
                    "type": "lowercase",
                    "log_level": "INFO"
                },
            ]
        }

        loader = DataPreprocess(config, log_level='INFO')
        test_data = "This is a TEST sentence!"
        test_data = loader.process_item(test_data):
"""

from data_preprocessing.steps.base import Steps


class SingleItemLoader(Steps):
    """Single Item Loader class.

    Args:
        config (json): Json object containing the configuration details

    Example:
        .. code-block::

            config = {
                "type": "single_item",
                "log_level": "INFO"
            }
    """
    def __init__(self, config):
        super().__init__(config)

    def process(self, data):
        """ Process item of data.

        Transform into a valid item and yield the item.

        Args:
            data (str): data to process
        Returns:
            obj: item
        """
        item = {
            "data": data
        }
        return self._item_model(item)
